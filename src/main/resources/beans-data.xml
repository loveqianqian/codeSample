<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

    <context:annotation-config/>
    <context:component-scan base-package="cn.myloveqian.service"/>
    <context:component-scan base-package="cn.myloveqian.domain"/>
    <context:component-scan base-package="cn.myloveqian.dao"/>

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close"
          p:driverClassName="${driverClassName}"
          p:url="${url}"
          p:username="${username}"
          p:password="${password}"
          p:maxActive="${maxActive}"
          p:initialSize="${initialSize}"
          p:maxWait="${maxWait}"
          p:minIdle="${minIdle}"
          p:timeBetweenEvictionRunsMillis="${timeBetweenEvictionRunsMillis}"
          p:minEvictableIdleTimeMillis="${minEvictableIdleTimeMillis}"
          p:validationQuery="${validationQuery}"
          p:testOnReturn="${testOnReturn}"
          p:testOnBorrow="${testOnBorrow}"
          p:testWhileIdle="${testWhileIdle}"
          p:maxOpenPreparedStatements="${maxOpenPreparedStatements}"
          p:removeAbandoned="${removeAbandoned}"
          p:removeAbandonedTimeout="${removeAbandonedTimeout}"
          p:logAbandoned="${logAbandoned}"/>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
          p:dataSource-ref="dataSource"
          p:configLocation="mybatis.cfg.xml">
        <property name="mapperLocations">
            <list>
                <value>classpath*:mapper/*.xml</value>
            </list>
        </property>
    </bean>

    <bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          p:dataSource-ref="dataSource"/>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="loveQianSqlSessionFactory" class="org.mybatis.spring.mapper.MapperScannerConfigurer"
          p:basePackage="cn.myloveqian.dao"
          p:sqlSessionFactoryBeanName="loveQianSqlSessionFactory"/>

</beans>